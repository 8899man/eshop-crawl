# coding utf-8
class WineFilter
  #single
  def countries
    @countries ||= {
      '中国' => '中国',
      '美国' => '美国',
      '英国' => '英国',
      '法国' => '法国',
      '德国' => '德国',
      '智利' => '智利',
      '意大利' => '意大利',
      '俄罗斯' => '俄罗斯',
      '西班牙' => '西班牙',
      '澳洲' => '澳大利亚',
      '澳大利亚' => '澳大利亚',
      '南非' => '南非',
      '阿根廷' => '阿根廷',
      '新西兰' => '新西兰',
      '葡萄牙' => '葡萄牙',
      '加拿大' => '加拿大',
      '希腊' => '希腊',
      '奥地利' => '奥地利',
      '匈牙利' => '匈牙利',
      '韩国' => '韩国',
      '日本' => '日本',
      '墨西哥' => '墨西哥',
    }
  end

  def country_values
    countries.values.uniq
  end

  def countries_keys_regexp
    @countries_keys_regexp ||= Regexp.new(countries.keys.join('|'), Regexp::IGNORECASE | Regexp::MULTILINE)
  end

  def brands
    @brands ||={
      '拉菲' => '拉菲',
      '干露' => '干露',
      #'奔富洛神' => '奔富洛神',
      '奔富' => '奔富',
      '百家得' => '百家得／百加得',
      '百加得' => '百家得／百加得',
      '芝华士' => '芝华士',
      '马爹利' => '马爹利',
      'Martell' => '马爹利',
      '火地岛' => '火地岛',
      '桃乐丝' => '桃乐丝',
      '杰卡斯' => '杰卡斯',
      'baileys' => '百利',
      '百利' => '百利',
      'Remy Martin' => '人头马',
      '人头马' => '人头马',
      '贝马格雷' => '贝马格雷',
      '尊尼获加' => '尊尼获加',
      'JOHNNIE WALKER' => '尊尼获加',
      'GREY GOOSE' => '灰雁',
      '灰雁' => '灰雁',
      'Cointreau' => '君度',
      '君度' => '君度',
      'skyy' => '深蓝',
      '蓝天' => '深蓝',
      '深蓝' => '深蓝',
      'GORDON\'S' => '歌顿',
      '歌顿' => '歌顿',
      '哥顿' => '歌顿',
      'HENNESSY' => '轩尼诗',
      '轩尼诗' => '轩尼诗',
      '温莎' => '温莎',
      'Windsor' => '温莎',
      '杰克丹尼' => '杰克丹尼',
      'JACK DANIELS' => '杰克丹尼',
      '斯米诺' => '斯米诺',
      'smirnoff' => '斯米诺',
      '占边' => '占边',
      'jim beam' => '占边',
      '百龄坛' => '百龄坛',
      'ballantine' => '百龄坛',
      '甘露' => '甘露',
      #'' => '',
      #'' => '',

      #干邑
      '豪达' => '豪达',
      'Baron Otard' => '豪达',
      '拿破仑' => '拿破仑',
      'Courvoisier' => '拿破仑',
      '卡慕' => '卡慕',
      'Camus' => '卡慕',

      #白酒
      '茅台' => '茅台',
      '五粮液' => '五粮液',
      '剑南春' => '剑南春',
      '水井坊' => '水井坊',
      '古井' => '古井',
      '郎酒' => '郎酒',
      '泸州老窖' => '泸州老窖',
      '国窖1573' => '国窖1573',
      '洋河' => '洋河',
      '泰山' => '泰山',
      '汾酒' => '汾酒',
      '西凤' => '西凤',
      '伊力' => '伊力',
      '赖贵山' => '赖贵山',
      '口子' => '口子',
      '子萨' => '子萨',
      '珍酒' => '珍酒',
      '绵竹' => '绵竹',
      '塔牌' => '塔牌',
      '小糊涂仙' => '小糊涂仙',
      '金六福' => '金六福',
      '名将酒' => '名将酒',
      '景芝酒' => '景芝酒',
      '舍得酒' => '舍得酒',
      '六和液' => '六和液',
      '衡水老白干' => '衡水老白干',
      '致中和' => '致中和',
      '文君酒' => '文君酒',

      #国产红酒
      '楼兰' => '楼兰',
      '长城' => '长城',
      '王朝' => '王朝',
      '张裕' => '张裕',
      '威龙' => '威龙',

      #黄酒
      '老台门' => '老台门',
      '塔牌' => '塔牌',
      '古越龙山' => '古越龙山',
      '会稽山' => '会稽山',
      '女儿红' => '女儿红',


      #'' => '',
      #'' => '',
      #'' => '',
      #'' => '',
      #'' => '',
      #'' => '',
      #'' => '',
      #'' => '',
      #'' => '',
      #'' => '',
      #。。。
    }
  end

  def brands_keys_regexp
    @brands_keys_regexp ||= Regexp.new(brands.keys.join('|'), Regexp::IGNORECASE | Regexp::MULTILINE)
  end

  def brand_values
    brands.values.uniq
  end

  #multi
  def types
    @types ||= {
      #葡萄酒
      '葡萄酒' => {
      '红酒' => '红葡萄酒',
      '干红' => '红葡萄酒',
      '红葡萄酒' => '红葡萄酒',
      '白葡萄酒' => '白葡萄酒',
      '干白' => '白葡萄酒',
      '桃红葡萄酒' => '桃红酒',
      '桃红酒' => '桃红酒',
      '桃红' => '桃红酒',
      #'起泡酒' => '起泡酒',
      '起泡' => '起泡酒',
      #'加强葡萄酒' => '加强葡萄酒',

      '冰酒' => '冰酒',
      '贵腐酒' => '贵腐酒',
      '贵腐甜白' => '贵腐酒',
      },
      #洋酒
      #'洋酒' => '洋酒',
      #干邑 威士忌 伏特加 龙舌兰／特基拉 朗姆酒 金酒 利口酒／力娇酒 白兰地 其他
      '洋酒' => {
      '伏特加' => '伏特加',
      'vodka' => '伏特加',
      '威士忌' => '威士忌',
      'whisky' => '威士忌',
      '干邑' => '干邑',
      'vosp' => '干邑',
      '龙舌兰' => '龙舌兰',
      '特基拉' => '龙舌兰',
      'tequila' => '龙舌兰',
      '朗姆' => '朗姆',
      #'rum' => '朗姆',
      '金酒' => '金酒',
      '利口酒' => '利口酒／力娇酒',
      '力娇酒' => '利口酒／力娇酒',
      '白兰地' => '白兰地',
      '苦艾酒' => '苦艾酒',
      '预调酒' => '预调酒',
      #'' => '',
      #'' => '',
      #'' => '',
      },
      #白酒
      #'白酒' => '白酒',
      #酱香型 浓香型 清香型 凤香型 其他香型
      '白酒' => {
      '酱香' => '酱香型',
      '浓香' => '浓香型',
      '清香' => '清香型',
      '凤香' => '凤香型',
      '糟香' => '糟香型',
      },
      #黄酒
      '黄酒' =>{
      '黄酒' => '黄酒',
      },


      #啤酒
      #'啤酒' => '啤酒',
      #黑啤 黄啤 白啤
      '啤酒' => {
      '黑啤' => '黑啤',
      '黄啤' => '黄啤',
      '白啤' => '白啤',
      },

      #组合
      '组合' => {
        '组合' => '组合',
        '套装' => '套装',
      },
      #other
      #'酒具' => '酒具',
      #'酒杯' => '酒杯',
      #'玻璃杯' => '酒杯',
      '酒具' => {
      '礼盒' => '礼盒',# 算到酒具里面
      '杯' => '酒杯',
      '酒刀' => '酒刀',
      '开瓶器' => '开瓶器',
      '醒酒器' => '醒酒器',
      '倒酒器' => '倒酒器',
      '酒架' => '酒架',
      '酒鼻子' => '酒鼻子',
      '酒柜' => '酒柜',
      '壶' => '壶',
      },
    }
  end

  def type_values
    children_types.values.uniq
  end

  def children_types
    if @children_types.blank?
      @children_types = {}
      types.values.each do |type|
        @children_types.merge!(type)
      end
    end
    @children_types
  end

  def main_types
    @main_types ||= types.keys
  end

  def main_type_values
    main_types
  end

  def types_keys_regexp
    @types_keys_regexp ||= Regexp.new(children_types.keys.join('|'), Regexp::IGNORECASE | Regexp::MULTILINE)
  end

  def types_values_regexp
    @types_values_regexp ||= Regexp.new(children_types.values.join('|'), Regexp::IGNORECASE | Regexp::MULTILINE)
  end

  def get_main_types_by_children_types(p_types)
    types.select{|k,v| !(v.values & p_types).blank? }.keys
  end

  #葡萄品种
  def grape_types
    @grape_types ||=
      {
      #全是葡萄酒？
      '赤霞珠' => '赤霞珠',
      #'卡本内苏维翁' => '赤霞珠',
      #'卡本内·苏维翁' => '赤霞珠',
      '苏维翁' => '赤霞珠',
      'Cabernet Sauvignon' => '赤霞珠',
      'Sauvignon' => '赤霞珠',

      '设拉子' => '西拉',
      '席拉' => '西拉',
      '西拉' => '西拉',
      'Syrah' => '西拉',

      '梅乐' => '梅洛',
      '梅洛' => '梅洛',
      '米勒' => '梅洛',
      '梅鹿辄' => '梅洛',
      'Merlot' => '梅洛',

      '黑皮诺' => '黑皮诺',
      '黑比诺' => '黑皮诺',
      '黑品诺' => '黑皮诺',
      'Pinot Noir' => '黑皮诺',

      '歌海娜' => '歌海娜',
      '格那希' => '歌海娜',
      '格连纳什' => '歌海娜',
      'Grenache' => '歌海娜',

      '品丽珠' => '品丽珠',
      #'卡本内·弗朗' => '品丽珠',
      #'卡本内弗朗' => '品丽珠',
      '弗朗' => '品丽珠',
      'Cabernet Franc' => '品丽珠',

      '雷司令' => '雷司令',
      '霞多丽' => '霞多丽',
      '长相思' => '长相思',
      '佳美娜' => '佳美娜',
      '佳丽酿' => '佳丽酿',
      '佳美' => '佳美',
      '马尔贝克' => '马尔贝克',
      '白诗南' => '白诗南',
      '赛美蓉' => '赛美蓉',
      '丹魄' => '丹魄',
      '小维多' => '小维多',
      '麝香葡萄' => '麝香葡萄',
      '琼瑶浆' => '琼瑶浆',
      '桑娇维塞' => '桑娇维塞',
      '品乐塔吉' => '品乐塔吉',
      '白比诺' => '白比诺',
      '灰比诺' => '灰比诺',
      '神索' => '神索',
      '仙粉黛' => '仙粉黛',
      '内比奥罗' => '内比奥罗',
      '巴比拉' => '巴比拉',
      '维欧尼' => '维欧尼',
      '白玉霓' => '白玉霓',
      '蛇龙珠' => '蛇龙珠',
      '宝石解百纳' => '宝石解百纳',
      '黑达沃拉' => '黑达沃拉',
      '多姿桃' => '多姿桃',
      '龙眼' => '龙眼',
      '维奥娜' => '维奥娜',
      '希尔瓦那' => '希尔瓦那',
      '贵人香' => '贵人香',
    }
  end

  def grape_types_keys_regexp
    @grape_types_keys_regexp ||= Regexp.new(grape_types.keys.join('|'), Regexp::IGNORECASE | Regexp::MULTILINE)
  end
end
